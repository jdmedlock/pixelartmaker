//-----------------------------------------------------------------------------
// Global definitions
//-----------------------------------------------------------------------------

:root {
  --designGridRowCount: 8;
  --designGridColumnCount: 8;
  --designGridHeight: 40px;
  --recentColorCellHeight: 40px;
  --gridGap: 5px;
}

random(min, max)
  return floor( math(0, "random") * max + min )

//-----------------------------------------------------------------------------
// Page Region Definitions
// 
// Each region cooresponds to a part of the CSS grid, which is used to
// to make the page responsive.
//-----------------------------------------------------------------------------

.wrapper {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  grid-gap: 5px;
  grid-auto-rows: minmax(auto, auto);
}

.page-header {
  grid-column: 1 / 6;
  grid-row: 1;
  text-align: center;
}

.menu {
  grid-column: 1 / 6;
  grid-row: 2;
  text-align: center;
}

.color-chooser {
  grid-column: 1;
  grid-row: 3;
  border-color: black;
  border-width: 1px;
  text-align: center;
  justify-content: center;
  align-items: center;
  justify-items: center;
}

.design-grid {
  grid-column: 2 / 6;
  grid-row: 3;
  border-color: black;
  border-width: 1px;
}

.page-footer{
  grid-column: 1 / 6;
  grid-row: 4;
  border-color: black;
  border-width: 1px;
  text-align: center;
}

//-----------------------------------------------------------------------------
// Individual Page Elements
//-----------------------------------------------------------------------------

// Menu Region items
.menu-item {
  border-color: black;
  border-width: 1px;
}

// Color Chooser Region Items
.color-selector {
  border-color: black;
  border-width: 1px;
  justify-content: center;
  height: var(--recentColorCellHeight);
  width: 220px;
  background-color: blue;
}

.recent-color-wrapper {
  display: grid;
  grid-template-columns: repeat(5, var(--recentColorCellHeight));
  grid-template-rows: repeat(1, var(--recentColorCellHeight));
  grid-gap: var(--gridGap);
  margin-top: 5px;
  text-align: center;
  justify-content: center;
}

for shade in (90 80 70 60 50)
  .recent-color-{shade} {
    grid-column: 1fr;
    grid-row: 1fr;
    background-color: hsl(0, 0%, shade + '%');
    border-color: black;
    border-width: 1px;
  }

// Design Grid Region Items
.design-grid-wrapper {
  display: grid;
  grid-template-rows: repeat(var(--designGridRowCount), var(--designGridHeight));
  grid-template-columns: repeat(var(--designGridColumnCount), var(--designGridHeight));
}

.design-grid-item {
  grid-column-start: auto;
  grid-row-start: auto;
  margin: 5px;
}

for cell-color in (0..100)
  .design-grid-item:nth-child(#{cell-color}) {
    background-color: rgba(random(0,256)-1, random(0,256)-1, random(0,256)-1, random(0,10)/10);
  }
